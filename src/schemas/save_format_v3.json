{
	"$ref": "#/definitions/SaveFormat",
	"$schema": "http://json-schema.org/draft-07/schema#",
	"definitions": {
		"CardCategory": {
			"enum": ["quest", "event", "location", "character", "faction", "note"],
			"type": "string"
		},
		"CardFolderMetadata": {
			"additionalProperties": false,
			"properties": {
				"_category": {
					"$ref": "#/definitions/CardCategory"
				},
				"color": {
					"type": "string"
				},
				"id": {
					"$ref": "#/definitions/ID"
				},
				"name": {
					"type": "string"
				},
				"tags": {
					"items": {
						"$ref": "#/definitions/ID"
					},
					"type": "array"
				}
			},
			"required": ["_category", "color", "id", "name", "tags"],
			"type": "object"
		},
		"CardTypeBasedOnCategory<\"character\">": {
			"$ref": "#/definitions/Character",
			"description": "Helper type to get the card type associated to generic category type."
		},
		"CardTypeBasedOnCategory<\"event\">": {
			"$ref": "#/definitions/Event",
			"description": "Helper type to get the card type associated to generic category type."
		},
		"CardTypeBasedOnCategory<\"faction\">": {
			"$ref": "#/definitions/Faction",
			"description": "Helper type to get the card type associated to generic category type."
		},
		"CardTypeBasedOnCategory<\"location\">": {
			"$ref": "#/definitions/Location",
			"description": "Helper type to get the card type associated to generic category type."
		},
		"CardTypeBasedOnCategory<\"note\">": {
			"$ref": "#/definitions/Note",
			"description": "Helper type to get the card type associated to generic category type."
		},
		"CardTypeBasedOnCategory<\"quest\">": {
			"$ref": "#/definitions/Quest",
			"description": "Helper type to get the card type associated to generic category type."
		},
		"CardsStoreSerialized": {
			"additionalProperties": false,
			"properties": {
				"character": {
					"$ref": "#/definitions/SerializedFolder%3CCardFolderMetadata%2CCardTypeBasedOnCategory%3C%22character%22%3E%3E"
				},
				"event": {
					"$ref": "#/definitions/SerializedFolder%3CCardFolderMetadata%2CCardTypeBasedOnCategory%3C%22event%22%3E%3E"
				},
				"faction": {
					"$ref": "#/definitions/SerializedFolder%3CCardFolderMetadata%2CCardTypeBasedOnCategory%3C%22faction%22%3E%3E"
				},
				"location": {
					"$ref": "#/definitions/SerializedFolder%3CCardFolderMetadata%2CCardTypeBasedOnCategory%3C%22location%22%3E%3E"
				},
				"note": {
					"$ref": "#/definitions/SerializedFolder%3CCardFolderMetadata%2CCardTypeBasedOnCategory%3C%22note%22%3E%3E"
				},
				"quest": {
					"$ref": "#/definitions/SerializedFolder%3CCardFolderMetadata%2CCardTypeBasedOnCategory%3C%22quest%22%3E%3E"
				}
			},
			"required": ["quest", "event", "location", "character", "faction", "note"],
			"type": "object"
		},
		"Character": {
			"additionalProperties": false,
			"properties": {
				"_category": {
					"const": "character",
					"type": "string"
				},
				"classes": {
					"type": "string"
				},
				"desc": {
					"type": "string"
				},
				"id": {
					"$ref": "#/definitions/ID"
				},
				"isAlive": {
					"type": "boolean"
				},
				"isNPC": {
					"type": "boolean"
				},
				"name": {
					"type": "string"
				},
				"race": {
					"type": "string"
				},
				"role": {
					"type": "string"
				},
				"tags": {
					"items": {
						"$ref": "#/definitions/ID"
					},
					"type": "array"
				}
			},
			"required": [
				"_category",
				"classes",
				"desc",
				"id",
				"isAlive",
				"isNPC",
				"name",
				"race",
				"role",
				"tags"
			],
			"type": "object"
		},
		"Event": {
			"additionalProperties": false,
			"properties": {
				"_category": {
					"const": "event",
					"type": "string"
				},
				"day": {
					"type": "number"
				},
				"desc": {
					"type": "string"
				},
				"id": {
					"$ref": "#/definitions/ID"
				},
				"tags": {
					"items": {
						"$ref": "#/definitions/ID"
					},
					"type": "array"
				},
				"type": {
					"$ref": "#/definitions/EventType"
				}
			},
			"required": ["_category", "day", "desc", "id", "tags", "type"],
			"type": "object"
		},
		"EventType": {
			"enum": ["combat", "encounter", "discovery", "travel", "other"],
			"type": "string"
		},
		"Faction": {
			"additionalProperties": false,
			"properties": {
				"_category": {
					"const": "faction",
					"type": "string"
				},
				"desc": {
					"type": "string"
				},
				"id": {
					"$ref": "#/definitions/ID"
				},
				"name": {
					"type": "string"
				},
				"tags": {
					"items": {
						"$ref": "#/definitions/ID"
					},
					"type": "array"
				}
			},
			"required": ["_category", "desc", "id", "name", "tags"],
			"type": "object"
		},
		"ID": {
			"type": "number"
		},
		"Location": {
			"additionalProperties": false,
			"properties": {
				"_category": {
					"const": "location",
					"type": "string"
				},
				"desc": {
					"type": "string"
				},
				"id": {
					"$ref": "#/definitions/ID"
				},
				"name": {
					"type": "string"
				},
				"tags": {
					"items": {
						"$ref": "#/definitions/ID"
					},
					"type": "array"
				}
			},
			"required": ["_category", "desc", "id", "name", "tags"],
			"type": "object"
		},
		"MetaData": {
			"additionalProperties": false,
			"properties": {
				"lastUpdate": {
					"type": "string"
				},
				"version": {
					"const": "save-v3",
					"type": "string"
				}
			},
			"required": ["version", "lastUpdate"],
			"type": "object"
		},
		"Note": {
			"additionalProperties": false,
			"properties": {
				"_category": {
					"const": "note",
					"type": "string"
				},
				"desc": {
					"type": "string"
				},
				"id": {
					"$ref": "#/definitions/ID"
				},
				"tags": {
					"items": {
						"$ref": "#/definitions/ID"
					},
					"type": "array"
				},
				"title": {
					"type": "string"
				}
			},
			"required": ["_category", "desc", "id", "tags", "title"],
			"type": "object"
		},
		"Quest": {
			"additionalProperties": false,
			"properties": {
				"_category": {
					"const": "quest",
					"type": "string"
				},
				"id": {
					"$ref": "#/definitions/ID"
				},
				"tags": {
					"items": {
						"$ref": "#/definitions/ID"
					},
					"type": "array"
				},
				"tasks": {
					"items": {
						"$ref": "#/definitions/Task"
					},
					"type": "array"
				},
				"title": {
					"type": "string"
				}
			},
			"required": ["_category", "id", "tags", "tasks", "title"],
			"type": "object"
		},
		"SaveFormat": {
			"additionalProperties": false,
			"properties": {
				"_meta": {
					"$ref": "#/definitions/MetaData"
				},
				"cards": {
					"$ref": "#/definitions/CardsStoreSerialized"
				},
				"days": {
					"type": "number"
				},
				"name": {
					"type": "string"
				},
				"quickNote": {
					"type": "string"
				},
				"season": {
					"$ref": "#/definitions/Season"
				}
			},
			"required": ["_meta", "cards", "days", "name", "quickNote", "season"],
			"type": "object"
		},
		"Season": {
			"enum": ["spring", "summer", "autumn", "winter"],
			"type": "string"
		},
		"SerializedFolder<CardFolderMetadata,CardTypeBasedOnCategory<\"character\">>": {
			"additionalProperties": {
				"additionalProperties": false,
				"description": "Structure of a flattened Folder object.",
				"properties": {
					"files": {
						"items": {
							"$ref": "#/definitions/CardTypeBasedOnCategory%3C%22character%22%3E"
						},
						"type": "array"
					},
					"metadata": {
						"$ref": "#/definitions/CardFolderMetadata"
					},
					"parent": {
						"description": "Data type of the keys used to index a FlatFolder.",
						"type": "string"
					},
					"subfolders": {
						"items": {
							"description": "Data type of the keys used to index a FlatFolder.",
							"type": "string"
						},
						"type": "array"
					}
				},
				"required": ["files", "metadata", "subfolders"],
				"type": "object"
			},
			"description": "An entry in a serialized  {@link  FlatTree } . TODO: maybe remove the Map intermediary in the serialization process (do Folder -> object literal, instead of Folder -> Map -> object literal)",
			"propertyNames": {
				"description": "Data type of the keys used to index a FlatFolder."
			},
			"type": "object"
		},
		"SerializedFolder<CardFolderMetadata,CardTypeBasedOnCategory<\"event\">>": {
			"additionalProperties": {
				"additionalProperties": false,
				"description": "Structure of a flattened Folder object.",
				"properties": {
					"files": {
						"items": {
							"$ref": "#/definitions/CardTypeBasedOnCategory%3C%22event%22%3E"
						},
						"type": "array"
					},
					"metadata": {
						"$ref": "#/definitions/CardFolderMetadata"
					},
					"parent": {
						"description": "Data type of the keys used to index a FlatFolder.",
						"type": "string"
					},
					"subfolders": {
						"items": {
							"description": "Data type of the keys used to index a FlatFolder.",
							"type": "string"
						},
						"type": "array"
					}
				},
				"required": ["files", "metadata", "subfolders"],
				"type": "object"
			},
			"description": "An entry in a serialized  {@link  FlatTree } . TODO: maybe remove the Map intermediary in the serialization process (do Folder -> object literal, instead of Folder -> Map -> object literal)",
			"propertyNames": {
				"description": "Data type of the keys used to index a FlatFolder."
			},
			"type": "object"
		},
		"SerializedFolder<CardFolderMetadata,CardTypeBasedOnCategory<\"faction\">>": {
			"additionalProperties": {
				"additionalProperties": false,
				"description": "Structure of a flattened Folder object.",
				"properties": {
					"files": {
						"items": {
							"$ref": "#/definitions/CardTypeBasedOnCategory%3C%22faction%22%3E"
						},
						"type": "array"
					},
					"metadata": {
						"$ref": "#/definitions/CardFolderMetadata"
					},
					"parent": {
						"description": "Data type of the keys used to index a FlatFolder.",
						"type": "string"
					},
					"subfolders": {
						"items": {
							"description": "Data type of the keys used to index a FlatFolder.",
							"type": "string"
						},
						"type": "array"
					}
				},
				"required": ["files", "metadata", "subfolders"],
				"type": "object"
			},
			"description": "An entry in a serialized  {@link  FlatTree } . TODO: maybe remove the Map intermediary in the serialization process (do Folder -> object literal, instead of Folder -> Map -> object literal)",
			"propertyNames": {
				"description": "Data type of the keys used to index a FlatFolder."
			},
			"type": "object"
		},
		"SerializedFolder<CardFolderMetadata,CardTypeBasedOnCategory<\"location\">>": {
			"additionalProperties": {
				"additionalProperties": false,
				"description": "Structure of a flattened Folder object.",
				"properties": {
					"files": {
						"items": {
							"$ref": "#/definitions/CardTypeBasedOnCategory%3C%22location%22%3E"
						},
						"type": "array"
					},
					"metadata": {
						"$ref": "#/definitions/CardFolderMetadata"
					},
					"parent": {
						"description": "Data type of the keys used to index a FlatFolder.",
						"type": "string"
					},
					"subfolders": {
						"items": {
							"description": "Data type of the keys used to index a FlatFolder.",
							"type": "string"
						},
						"type": "array"
					}
				},
				"required": ["files", "metadata", "subfolders"],
				"type": "object"
			},
			"description": "An entry in a serialized  {@link  FlatTree } . TODO: maybe remove the Map intermediary in the serialization process (do Folder -> object literal, instead of Folder -> Map -> object literal)",
			"propertyNames": {
				"description": "Data type of the keys used to index a FlatFolder."
			},
			"type": "object"
		},
		"SerializedFolder<CardFolderMetadata,CardTypeBasedOnCategory<\"note\">>": {
			"additionalProperties": {
				"additionalProperties": false,
				"description": "Structure of a flattened Folder object.",
				"properties": {
					"files": {
						"items": {
							"$ref": "#/definitions/CardTypeBasedOnCategory%3C%22note%22%3E"
						},
						"type": "array"
					},
					"metadata": {
						"$ref": "#/definitions/CardFolderMetadata"
					},
					"parent": {
						"description": "Data type of the keys used to index a FlatFolder.",
						"type": "string"
					},
					"subfolders": {
						"items": {
							"description": "Data type of the keys used to index a FlatFolder.",
							"type": "string"
						},
						"type": "array"
					}
				},
				"required": ["files", "metadata", "subfolders"],
				"type": "object"
			},
			"description": "An entry in a serialized  {@link  FlatTree } . TODO: maybe remove the Map intermediary in the serialization process (do Folder -> object literal, instead of Folder -> Map -> object literal)",
			"propertyNames": {
				"description": "Data type of the keys used to index a FlatFolder."
			},
			"type": "object"
		},
		"SerializedFolder<CardFolderMetadata,CardTypeBasedOnCategory<\"quest\">>": {
			"additionalProperties": {
				"additionalProperties": false,
				"description": "Structure of a flattened Folder object.",
				"properties": {
					"files": {
						"items": {
							"$ref": "#/definitions/CardTypeBasedOnCategory%3C%22quest%22%3E"
						},
						"type": "array"
					},
					"metadata": {
						"$ref": "#/definitions/CardFolderMetadata"
					},
					"parent": {
						"description": "Data type of the keys used to index a FlatFolder.",
						"type": "string"
					},
					"subfolders": {
						"items": {
							"description": "Data type of the keys used to index a FlatFolder.",
							"type": "string"
						},
						"type": "array"
					}
				},
				"required": ["files", "metadata", "subfolders"],
				"type": "object"
			},
			"description": "An entry in a serialized  {@link  FlatTree } . TODO: maybe remove the Map intermediary in the serialization process (do Folder -> object literal, instead of Folder -> Map -> object literal)",
			"propertyNames": {
				"description": "Data type of the keys used to index a FlatFolder."
			},
			"type": "object"
		},
		"Task": {
			"additionalProperties": false,
			"properties": {
				"desc": {
					"type": "string"
				},
				"isCompleted": {
					"type": "boolean"
				}
			},
			"required": ["isCompleted", "desc"],
			"type": "object"
		}
	}
}
